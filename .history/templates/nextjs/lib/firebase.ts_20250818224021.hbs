import { initializeApp, getApps } from 'firebase/app';
import { getAuth, connectAuthEmulator } from 'firebase/auth';
import { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';
import { getStorage, connectStorageEmulator } from 'firebase/storage';
import { getFunctions, connectFunctionsEmulator } from 'firebase/functions';
import { getAnalytics, isSupported as isAnalyticsSupported } from 'firebase/analytics';
import { getPerformance } from 'firebase/performance';

// Configuration Firebase
const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,
};

// Services Firebase - initialisation côté client uniquement
let app: any = null;
let auth: any = null;
let db: any = null;
let storage: any = null;
let functions: any = null;
let analytics: any = null;
let performance: any = null;

// Initialiser Firebase seulement côté client
if (typeof window !== 'undefined') {
  if (!getApps().length) {
    app = initializeApp(firebaseConfig);
  } else {
    app = getApps()[0];
  }

  // Services Firebase
  auth = getAuth(app);
  db = getFirestore(app);
  storage = getStorage(app);
  functions = getFunctions(app);

  // Analytics (si supporté)
  isAnalyticsSupported().then(yes => {
    if (yes) analytics = getAnalytics(app);
  });

  // Performance (si supporté)
  performance = getPerformance(app);
}

// Configuration des émulateurs en développement
if (process.env.NODE_ENV === 'development') {
  // Émulateur Auth
  if (process.env.NEXT_PUBLIC_USE_AUTH_EMULATOR === 'true') {
    connectAuthEmulator(auth, 'http://localhost:9099');
  }
  
  // Émulateur Firestore
  if (process.env.NEXT_PUBLIC_USE_FIRESTORE_EMULATOR === 'true') {
    connectFirestoreEmulator(db, 'localhost', 8080);
  }
  
  // Émulateur Storage
  if (process.env.NEXT_PUBLIC_USE_STORAGE_EMULATOR === 'true') {
    connectStorageEmulator(storage, 'localhost', 9199);
  }
  
  // Émulateur Functions
  if (process.env.NEXT_PUBLIC_USE_FUNCTIONS_EMULATOR === 'true') {
    connectFunctionsEmulator(functions, 'localhost', 5001);
  }
}

export default app; 